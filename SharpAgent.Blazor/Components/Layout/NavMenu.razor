@implements IDisposable

@inject NavigationManager NavigationManager

<div class="sidebar col-md-3 col-lg-2 pt-2 px-0 bg-body-tertiary min-vh-100 d-flex flex-column">
    <div class="offcanvas-md offcanvas-end bg-body-tertiary" tabindex="-1" id="sidebarMenu" aria-labelledby="sidebarMenuLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="sidebarMenuLabel">SharpAgent</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" data-bs-target="#sidebarMenu" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body d-md-flex flex-column p-0 pt-2 overflow-y-auto">
            <ul class="nav flex-column">
                <li class="nav-item">
                    <NavLink class="nav-link d-flex align-items-center gap-2" href="/counter/">
                        <svg class="bi"><use xlink:href="#file-earmark-text"></use></svg>
                        Counter
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link d-flex align-items-center gap-2" href="/new/">
                        <svg class="bi"><use xlink:href="#file-earmark-text"></use></svg>
                        New
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link d-flex align-items-center gap-2" href="/weather/">
                        <svg class="bi"><use xlink:href="#file-earmark-text"></use></svg>
                        Weather
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link d-flex align-items-center gap-2" href="/auth">
                        <svg class="bi"><use xlink:href="#file-earmark-text"></use></svg>
                        Auth Required
                    </NavLink>
                </li>
            </ul>

            <hr class="my-3">


        </div>
    </div>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    private bool IsActive(string path)
    {
        return currentUrl?.StartsWith(path) ?? false;
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}